name: My first pipeline

on:
  push

jobs:
  build_and_push:              #### Название job
    runs-on: ubuntu-22.04
    steps:
      - name: echo simple text
        run: echo "This is my first Github pipeline"
    
      - name: prepare ssh keys
        run: |
          ## Download ssh key to .ssh/
          mkdir -m 700 ~/.ssh
          echo -e "${{ secrets.CICD_SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ## Allow connection to github
          cat << EOF >> ~/.ssh/config
          Host github.com
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
              ForwardAgent yes
          EOF
    
      - name: clone repository
        run: git clone git@github.com:networkthor/cicd-lesson-2gr.git
    
      - name: build new image
        run: |
          cd cicd-lesson-2gr
          docker build -t networkthor/frontend:latest .
          docker images
    
      - name: login to docker registry
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login -u networkthor --password-stdin
    
      - name: push image to registry
        run: |
            docker push networkthor/frontend:latest
  
  deploy_image:
    needs: ['build_and_push']
    runs-on: ubuntu-22.04
    steps:
      - name: prepare ssh keys
        run: |
          ## Download ssh key to .ssh/
          mkdir -m 700 ~/.ssh
          echo -e "${{ secrets.DEV_SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ## Allow connection to github
          cat << EOF >> ~/.ssh/config
          Host github.com
              StrictHostKeyChecking no
              UserKnownHostsFile=/dev/null
              ForwardAgent yes
          EOF
      
      - name: deploy image to dev env
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.170.216.21 << EOF
          echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          docker rm -f dev-frontend
          docker run -d -p 8080:80 --pull=always --name dev-frontend ${{ secrets.DOCKER_USER }}/frontend:latest
          docker ps
          EOF
  