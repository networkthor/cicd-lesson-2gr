name: Build and Deploy to Dev

on:
  push:
   branches:
      - 'dev-*'

env:
  DOCKER_REGISTRY: 'networkthor/frontend'
  DEV_SRV: '52.50.218.70'

jobs:
  build_and_push:              #### Название job
    runs-on: ubuntu-22.04
    steps:
      - name: echo simple text
        run: echo "This is my first Github pipeline"
    
      - name: prepare ssh keys
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.CICD_SSH_PRIV_KEY }}
          name: id_rsa # optional
          known_hosts: 'github.com'
          if_key_exists: replace
          config: |
              Host github.com
                StrictHostKeyChecking no
                UserKnownHostsFile=/dev/null
                ForwardAgent yes
    
      - name: clone repository
        uses: actions/checkout@v4
      
      - name: login to docker registry
        uses: docker/login-action@v3
        with:
          username: networkthor
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push image to registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}:latest
  
  deploy_image:
    needs: ['build_and_push']
    runs-on: ubuntu-22.04
    steps:
      - name: prepare ssh keys
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          name: id_rsa # optional
          known_hosts: 'github.com'
          if_key_exists: replace
          config: |
              Host github.com
                StrictHostKeyChecking no
                UserKnownHostsFile=/dev/null
                ForwardAgent yes
      
      - name: deploy image to dev env
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.DEV_SRV }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          port: 22
          script: |
            echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
            docker rm -f dev-frontend
            docker run -d -p 8080:80 --pull=always --name dev-frontend ${{ secrets.DOCKER_USER }}/frontend:latest
            docker ps
  
  run_tests:
    needs: ['deploy_image']
    runs-on: ubuntu-22.04
    steps:
      - name: run tests
        id: run-test
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ env.DEV_SRV }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          port: 22
          script: |
            WEBSITE_URL="http://${{ env.DEV_SRV }}:8080"
            # Perform a curl request and capture the HTTP status code
            HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" "$WEBSITE_URL")
          
            # Check the HTTP status code
            if [[ "$HTTP_STATUS" == "200" ]]; then
                echo "Website is accessible. Status: 200 OK."
                exit 0
            else
                echo "Website is not accessible. Status: $HTTP_STATUS."
                exit 1
            fi
      
      - name: send outputs to github summary
        if: always()
        run: |
          if [[ "${{ steps.run-test.outcome }}" == "success" ]]; then
            echo "✅ The tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ The tests failed. Please investigate the issue." >> $GITHUB_STEP_SUMMARY
          fi
  